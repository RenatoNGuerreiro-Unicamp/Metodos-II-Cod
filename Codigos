# Trabalho Métodos II - Grupo 1

import os
os.environ["OMP_NUM_THREADS"] = '1'

import numpy as np              # cálculo otimizado
import pandas as pd             # dataframes e series
import matplotlib.pyplot as plt # graficos
import seaborn as sns           # for plot styling

# 3f para considerar nas visualizacoes no console ate 3 decimais para os floats
pd.options.display.float_format = '{:.3f}'.format

rais = pd.read_csv('RAIS_VINC_PUB_SUL.txt',          #trocando o nome da variável para rais
                        sep = ';',
                        encoding = "Latin-1",
                        header = 0,
                        usecols= ['Motivo Desligamento', # Agora vamos limpar as colunas que queremos para a RAIS
                                      'Escolaridade após 2005',
                                      'Faixa Etária',  
                                      'Sexo Trabalhador',
                                      'Raça Cor',
                                      'Faixa Remun Média (SM)',
                                      'Faixa Tempo Emprego', # Não vamos analisar, mas vamos utilizar para retirar pessoas que estão no período de experiência (até 3 meses)
                                      'Tipo Defic'])

rais.info()                     # o programa carregar as informações da RAIS

rais.shape                      # ver o tamanho da RAIS
# Aqui você pode observar como cada coluna se manifesta com os indivíduos analisados
# É só selecionar o que você quer observar e paertar F9

print(rais['Motivo Desligamento'])
print(rais['Escolaridade após 2005'])
print(rais['Faixa Etária'])
print(rais['Sexo Trabalhador'])
print(rais['Raça Cor'])
print(rais['Faixa Remun Média (SM)'])
print(rais['Faixa Tempo Emprego'])
print(rais['Tipo Defic'])

# Vamos alterar os nomes das variáveis
var_names = ['MotivoDesligamento', 'Idade','Renda',
             'Tempo','Escolaridade', 'RaçaCor', 
             'Sexo', 'TipoDeficiencia']
rais.columns = var_names     # Estamos trocando as variáveis da rais

rais.info()

# Aqui estamos passando para category, pois os números da rais fazem inferência a uma categoria e não a um número diretamente
rais.MotivoDesligamento = rais.MotivoDesligamento.astype('category')
rais.Escolaridade = rais.Escolaridade.astype('category')
rais.Idade= rais.Idade.astype('category')
rais.Sexo = rais.Sexo.astype('category')
rais.RaçaCor = rais.RaçaCor.astype('category')
rais.Renda = rais.Renda.astype('category')
rais.Tempo = rais.Tempo.astype('category')
rais.TipoDeficiencia = rais.TipoDeficiencia.astype('category')

# Aqui veremos os dados de cada variável
rais.describe(include = ['category'])

# Agora analisaremos a consistencia dos dados para observar se existe valores fora do layout da rais
rais.MotivoDesligamento.value_counts()   # Só iremos utilizar o 11
rais.Escolaridade.value_counts()         # Está certo
rais.Idade.value_counts()                # Retirar o 99 e o 1 (10 até 14 anos não pode trabalhar)
rais.Sexo.value_counts()                 # Está certo
rais.RaçaCor.value_counts()              # Retirar 99
rais.Renda.value_counts()                # Retirar 99
rais.Tempo.value_counts()                # Retirar 1 e 99
rais.TipoDeficiencia.value_counts()      # Está certo

# Agora iremos realizar a limpeza, retirando os dados mencionados a cima
query_MotivoDesligamento = rais.MotivoDesligamento == 11
rais = rais[query_MotivoDesligamento]

query_Idade = (rais.Idade != 99) & (rais.Idade !=1)
rais = rais[query_Idade]

query_Renda = (rais.Renda != 99)
rais = rais[query_Renda]

query_RaçaCor = (rais.RaçaCor != 99)
rais = rais[query_RaçaCor]

query_Tempo = (rais.Tempo != 99) & (rais.Tempo !=1)
rais = rais[query_Tempo]

# Exibir informações do DataFrame final para verificação
rais.info()

# Aqui eliminaremos todos os dados ausentes na RAIS, para garatir uma análise sem dados faltantes
rais.isna().sum()
rais.dropna(inplace = True, axis = 0)

#Aqui é para salvarmos em um arquivo de texto a nossa RAIS, contribuindo para observarmos se houve erros na construção
rais.to_csv(r'C:\Users\renat\Desktop\Trabalho Métodos II\RAIS_Limpa_Certa.txt', index=False, sep='\t')

# -----------------------------------------------------------------------------------------------------

# Agora vamos iniciar a construção das tabelas para analisar as variáveis que trouxemos

# -----------------------------------------------------------------------------------------------------

# Vamos realizar uma tabela de frequência dos Desligamentos sem justa causa atrelados as variáveis que trouxemos

# Contagem Escolaridade
rais.Escolaridade.value_counts().sort_index() #Para observar os dados da coluna se estão corretos
# Aqui vamos gerar uma tabela do Excel
rais.Escolaridade.value_counts().sort_index().to_excel(r'C:\Users\renat\Desktop\Trabalho Métodos II\Tabelas\Tabela Desligamentos em relação a Escolaridade.xlsx')
                            
# Contagem Idade
rais.Idade.value_counts().sort_index()
rais.Idade.value_counts().sort_index().to_excel(r'C:\Users\renat\Desktop\Trabalho Métodos II\Tabelas\Tabela Desligamentos em relação a Idade.xlsx')

# Contagem Sexo
rais.Sexo.value_counts().sort_index()
rais.Sexo.value_counts().sort_index().to_excel(r'C:\Users\renat\Desktop\Trabalho Métodos II\Tabelas\Tabela Desligamentos em relação a Sexo.xlsx')

# Contagem RaçaCor
rais.RaçaCor.value_counts().sort_index()
rais.RaçaCor.value_counts().sort_index().to_excel(r'C:\Users\renat\Desktop\Trabalho Métodos II\Tabelas\Tabela Desligamentos em relação a RaçaCor.xlsx')

# Contagem Renda
rais.Renda.value_counts().sort_index()
rais.Renda.value_counts().sort_index().to_excel(r'C:\Users\renat\Desktop\Trabalho Métodos II\Tabelas\Tabela Desligamentos em relação a Renda.xlsx')

# Contagem TipoDeficiencia
rais.TipoDeficiencia.value_counts().sort_index()
rais.TipoDeficiencia.value_counts().sort_index().to_excel(r'C:\Users\renat\Desktop\Trabalho Métodos II\Tabelas\Tabela Desligamentos em relação a TipoDeficiencia.xlsx')

# -----------------------------------------------------------------------------------------------------

# Agora vamos iniciar a construção dos gráficos para analisar as variáveis que trouxemos

# -----------------------------------------------------------------------------------------------------

# Índices compostos relacionando os motivos de desligamento com todos os outros

# Histograma - Desligamentos por RaçaCor
dados_filtrados = rais.RaçaCor.dropna()
dados_filtrados = dados_filtrados[dados_filtrados.isin([1, 2, 4, 6, 8, 9])]  # Inclui apenas os valores desejados
plt.figure(figsize=(10, 8))
plt.hist(rais.RaçaCor, bins=20, alpha=0.7, color='orange', edgecolor='black', align='mid')
plt.xlabel('Raça Cor', color='black') # Cor da Escrita eixo x
plt.ylabel('Número de Pessoas', color='black') # Cor da Escrita eixo y
plt.gca().spines['top'].set_color('black')
plt.gca().spines['right'].set_color('black')
plt.gca().spines['left'].set_color('black')
plt.gca().spines['bottom'].set_color('black')
plt.gca().patch.set_facecolor('white')  # Fundo branco
plt.gcf().set_facecolor('white')  # Área externa aos eixos em branco
plt.tick_params(axis='x', colors='black') # Cor dos números do eixo x em preto
plt.tick_params(axis='y', colors='black') # Cor dos números do eixo y em preto
plt.xticks([1, 2, 4, 6, 8, 9]) # Indicar os números do eixo x que devem aparecer
plt.show()

# Histograma - Desligamentos por Escolaridade
dados_filtrados = rais.Escolaridade.dropna() 
plt.figure(figsize=(12, 8))
plt.hist(rais.Escolaridade, bins=20, alpha=0.7, color='red', edgecolor='black', align='left')
plt.xlabel('Nível de Escolaridade', color='black') 
plt.ylabel('Número de Pessoas', color='black') 
plt.gca().spines['top'].set_color('black')
plt.gca().spines['right'].set_color('black')
plt.gca().spines['left'].set_color('black')
plt.gca().spines['bottom'].set_color('black')
plt.gca().patch.set_facecolor('white') 
plt.gcf().set_facecolor('white') 
plt.tick_params(axis='x', colors='black') 
plt.tick_params(axis='y', colors='black') 
plt.xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11])
plt.show()

# Histograma - Idade
dados_filtrados = rais.Idade.dropna() 
plt.figure(figsize=(10, 8))
plt.hist(rais.Idade, bins=20, alpha=0.7, color='blue', edgecolor='black', align='mid')
plt.xlabel('Faixa Etária', color='black') 
plt.ylabel('Número de Pessoas', color='black') 
plt.gca().spines['top'].set_color('black')
plt.gca().spines['right'].set_color('black')
plt.gca().spines['left'].set_color('black')
plt.gca().spines['bottom'].set_color('black')
plt.gca().patch.set_facecolor('white')  
plt.gcf().set_facecolor('white') 
plt.tick_params(axis='x', colors='black') 
plt.tick_params(axis='y', colors='black') 
plt.xticks([ 2, 3, 4, 5, 6, 7, 8])
plt.show()

# Histograma - Sexo
dados_filtrados = rais.Sexo.dropna() # Inclui apenas os valores desejados
plt.figure(figsize=(5, 8))
plt.hist(rais.Sexo, bins=5, alpha=0.7, color='green', edgecolor='black', align='mid')
plt.xlabel('Sexo', color='black') # Cor da Escrita eixo x
plt.ylabel('Número de Pessoas', color='black') # Cor da Escrita eixo y
plt.gca().spines['top'].set_color('black')
plt.gca().spines['right'].set_color('black')
plt.gca().spines['left'].set_color('black')
plt.gca().spines['bottom'].set_color('black')
plt.gca().patch.set_facecolor('white')  # Fundo branco
plt.gcf().set_facecolor('white')  # Área externa aos eixos em branco
plt.tick_params(axis='x', colors='black') # Cor dos números do eixo x em preto
plt.tick_params(axis='y', colors='black') # Cor dos números do eixo y em preto
plt.xticks([ 1, 2])
plt.show()

# Histograma - Renda
dados_filtrados = rais.Renda.dropna() 
plt.figure(figsize=(14, 8))
plt.hist(rais.Renda, bins=30, alpha=0.7, color='purple', edgecolor='black',align='mid')
plt.xlabel('Faixa de Renda', color='black') 
plt.ylabel('Número de Pessoas', color='black') 
plt.gca().spines['top'].set_color('black')
plt.gca().spines['right'].set_color('black')
plt.gca().spines['left'].set_color('black')
plt.gca().spines['bottom'].set_color('black')
plt.gca().patch.set_facecolor('white')  
plt.gcf().set_facecolor('white') 
plt.tick_params(axis='x', colors='black') 
plt.tick_params(axis='y', colors='black') 
plt.xticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
plt.show()

#Antes disso, vamos retirar os casos de pessoas não deficientes para conseguirmos analisar melhor os casos de desligamento por cada categoria de deficiência
query_TipoDeficiencia = (rais.TipoDeficiencia != 0)
rais = rais[query_TipoDeficiencia]

# Histograma - Tipo de Deficiência
dados_filtrados = rais.TipoDeficiencia.dropna() 
dados_filtrados = dados_filtrados[dados_filtrados.isin([ 1, 2, 3, 4, 5, 6])] 
plt.figure(figsize=(10, 8))
plt.hist(rais.TipoDeficiencia, bins=20, alpha=0.7, color='yellow', edgecolor='black', align='mid')
plt.xlabel('Categorias de Deficiência', color='black') 
plt.ylabel('Número de Pessoas', color='black') 
plt.gca().spines['top'].set_color('black')
plt.gca().spines['right'].set_color('black')
plt.gca().spines['left'].set_color('black')
plt.gca().spines['bottom'].set_color('black')
plt.gca().patch.set_facecolor('white')  
plt.gcf().set_facecolor('white') 
plt.tick_params(axis='x', colors='black') 
plt.tick_params(axis='y', colors='black') 
plt.xticks([ 1, 2, 3, 4, 5, 6])
plt.show()

rais.to_csv(r'C:\Users\renat\Desktop\Trabalho Métodos II\Código_Terceira_Entrega.txt', index=False, sep='\t')
